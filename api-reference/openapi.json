{
  "openapi": "3.1.0",
  "info": {
    "title": "Finsei API",
    "description": "API documentation for Finsei",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.sandbox.finsei.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v3/payment": {
      "post": {
        "summary": "Create new payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "validate",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            },
            "required": false
          },
          {
            "name": "signToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Validate"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "202": {
            "$ref": "#/components/responses/Sign"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/v2/mfa/{type}/sign/{requestId}": {
      "post": {
        "summary": "Verify MFA Code",
        "description": "Submits an MFA verification code to retrieve a signToken.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "sms",
                "google"
              ]
            },
            "description": "Type of MFA method"
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MFA request ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 6
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful verification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "signToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/v2/auth/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "SUCCESS"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "wsToken": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/SignFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v2/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "in": "query",
            "name": "signToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Validate"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "202": {
            "$ref": "#/components/responses/Sign"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v2/member": {
      "post": {
        "summary": "Invite sub user",
        "tags": [
          "member"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MemberInviteV2"
              },
              "encoding": {
                "walletAccess[]": {
                  "explode": true
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInviteV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/responses/SuccessFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/SignFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/beneficiary/{id}": {
      "get": {
        "summary": "Get beneficiary by ID",
        "tags": [
          "beneficiary"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the beneficiary"
          }
        ],
        "responses": {
          "200": {
            "description": "Beneficiary data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beneficiary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Beneficiary not found"
          }
        }
      }
    },
    "/v1/beneficiary": {
      "get": {
        "summary": "Get list of beneficiaries",
        "tags": [
          "beneficiary"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "wallet_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/PageNum"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "responses": {
          "200": {
            "description": "List of beneficiaries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Beneficiary"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v2/beneficiary": {
      "post": {
        "summary": "Create beneficiary",
        "tags": [
          "beneficiary"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/responses/SuccessFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v2/payment": {
      "post": {
        "summary": "Create a payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      },
      "get": {
        "summary": "Display list of payments",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentExpand"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "debit",
                "credit"
              ]
            }
          },
          {
            "name": "counterpartyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "counterpartyIban",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "new",
                  "process",
                  "completed",
                  "rejected",
                  "canceled",
                  "draft",
                  "compliance"
                ]
              }
            }
          },
          {
            "name": "createdFrom",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v2/payment/{id}": {
      "get": {
        "summary": "Get payment by ID",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Payment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v3/wallet": {
      "get": {
        "summary": "Get all wallets",
        "tags": [
          "wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "before",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of wallets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Wallet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v3/wallet/{id}": {
      "get": {
        "summary": "Get wallet by ID",
        "tags": [
          "wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Wallet"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/payment/{id}": {
      "get": {
        "summary": "Get payment by ID",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Payment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v2/card": {
      "post": {
        "summary": "Create a new card",
        "tags": [
          "card"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/card/{id}": {
      "get": {
        "summary": "Get detailed information about card",
        "tags": [
          "card"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Card id for detalization"
          },
          {
            "in": "query",
            "name": "expand",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "password",
                  "cvv",
                  "pin",
                  "number",
                  "limits",
                  "phone3ds"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardView"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "options": {
        "tags": [
          "card"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v1/card/{id}/limits": {
      "get": {
        "deprecated": true,
        "summary": "Get card limits",
        "tags": [
          "card"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Card id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardLimitsV1"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "/v1/card": {
        "get": {
          "summary": "Get list of cards",
          "tags": [
            "card"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "wallet_id",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "status[]",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ORDERED",
                    "DISPATCHED",
                    "ACTIVE",
                    "BLOCKED",
                    "CLOSED"
                  ]
                },
                "default": []
              }
            },
            {
              "in": "query",
              "name": "type[]",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ChipAndPin",
                    "Virtual",
                    "Disposable"
                  ]
                },
                "default": []
              },
              "style": "form",
              "explode": true
            },
            {
              "$ref": "#/components/parameters/PageNum"
            },
            {
              "$ref": "#/components/parameters/PerPage"
            },
            {
              "$ref": "#/components/parameters/Sort"
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "x-pagination-current-page": {
                  "$ref": "#/components/headers/x-pagination-current-page"
                },
                "x-pagination-page-count": {
                  "$ref": "#/components/headers/x-pagination-page-count"
                },
                "x-pagination-per-page": {
                  "$ref": "#/components/headers/x-pagination-per-page"
                },
                "x-pagination-total-count": {
                  "$ref": "#/components/headers/x-pagination-total-count"
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CardIndex"
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "403": {
              "$ref": "#/components/responses/Forbidden"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Login": {
          "type": "object",
          "properties": {
            "signToken": {
              "type": "string",
              "example": "abc123"
            },
            "fingerprintid": {
              "type": "string",
              "example": "fingerprint-xyz"
            }
          }
        },
        "AuthV2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "allowIps": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "ipv4"
              }
            },
            "withMfa": {
              "type": "boolean"
            },
            "fingerprint": {
              "type": "string"
            },
            "expiredAt": {
              "type": "string",
              "format": "date-time"
            },
            "app": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        },
        "MemberInviteV2": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "name": {
              "type": "string"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "walletAccess": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "email",
            "name"
          ]
        },
        "Beneficiary": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Uuid of beneficiary"
            },
            "name": {
              "type": "string",
              "description": "Name of beneficiary",
              "example": "Aliaksandr",
              "maxLength": 255
            },
            "currency": {
              "type": "string",
              "description": "Currency",
              "example": "EUR",
              "maxLength": 3
            },
            "bank_country": {
              "type": "string",
              "description": "2-char code of country",
              "example": "LT",
              "maxLength": 2
            },
            "iban": {
              "type": "string",
              "description": "IBAN number",
              "example": "NL13RABO4448094871",
              "maxLength": 255
            },
            "bic_swift": {
              "type": "string",
              "description": "BIC\\SWIFT number. ⚠ NOT REQUIRED if SEPA",
              "example": "AGBLLT2X"
            },
            "account_number": {
              "type": "number"
            },
            "sort_code": {
              "type": "number"
            },
            "bank_details_type": {
              "type": "string",
              "enum": [
                "DEFAULT",
                "LOCAL"
              ]
            },
            "street": {
              "type": "string",
              "description": "Beneficiary address street",
              "example": "Gagarina street",
              "maxLength": 64
            },
            "house": {
              "type": "string",
              "description": "Beneficiary house number",
              "example": 22,
              "maxLength": 32
            },
            "city": {
              "type": "string",
              "description": "Beneficiary city",
              "example": "London",
              "maxLength": 64
            },
            "country_id": {
              "type": "string",
              "description": "Alpha-2 country code",
              "example": "GB"
            },
            "postal_code": {
              "type": "string",
              "description": "Beneficiary postal code",
              "example": 10001,
              "maxLength": 32
            },
            "entity_type": {
              "type": "string",
              "description": "Entity type",
              "enum": [
                "individual",
                "company"
              ],
              "example": "company"
            },
            "company_name": {
              "type": "string",
              "description": "⚠ REQUIRED if entity_type is 'company'",
              "example": "Finsei Ltd.",
              "maxLength": 128
            },
            "first_name": {
              "type": "string",
              "description": "Beneficiary first name",
              "example": "Aliaksandr",
              "maxLength": 64
            },
            "last_name": {
              "type": "string",
              "description": "Beneficiary last name",
              "example": "Lastname",
              "maxLength": 64
            }
          },
          "required": [
            "walletId",
            "iban",
            "country",
            "currency",
            "entity_type"
          ]
        },
        "PaymentRequest": {
          "type": "object",
          "properties": {
            "walletId": {
              "type": "string"
            },
            "amount": {
              "type": "number"
            },
            "id": {
              "type": "string",
              "description": "Unique id"
            },
            "status": {
              "type": "string",
              "enum": [
                "NEW",
                "DRAFT"
              ]
            },
            "beneficiaryId": {
              "type": "string",
              "nullable": true,
              "description": "⚠ NOT REQUIRED if target_wallet_id is set"
            },
            "targetWalletId": {
              "type": "string",
              "nullable": true,
              "description": "⚠ NOT USE if beneficiary_id is set"
            },
            "reference": {
              "type": "string",
              "description": "⚠ NOT REQUIRED if target_wallet_id is set"
            },
            "purposeCode": {
              "type": "string",
              "description": "⚠ REQUIRED when beneficiary country is UAE"
            },
            "files": {
              "type": "array",
              "description": "⚠ NOT REQUIRED if target_wallet_id is set",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "walletId",
            "amount"
          ]
        },
        "Wallet": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "iban": {
              "type": "string"
            },
            "currency": {
              "type": "string"
            },
            "balance": {
              "type": "number"
            },
            "status": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "PaymentResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "paymentId": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        },
        "PaymentExpand": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "wallet",
              "beneficiary"
            ]
          }
        },
        "CardRequest": {
          "type": "object",
          "properties": {
            "walletId": {
              "type": "string"
            },
            "cardType": {
              "type": "string",
              "enum": [
                "VIRTUAL",
                "PHYSICAL"
              ]
            },
            "currency": {
              "type": "string"
            },
            "nameOnCard": {
              "type": "string"
            }
          },
          "required": [
            "walletId",
            "cardType",
            "currency",
            "nameOnCard"
          ]
        },
        "CardIndex": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique Card id",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Unique Card id (UUID string)",
              "readOnly": true
            },
            "wallet_id": {
              "type": "integer",
              "description": "Wallet ID",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "ChipAndPin",
                "Virtual",
                "Disposable"
              ]
            },
            "masked_number": {
              "type": "string",
              "description": "Masked Card Number",
              "example": "474359******5050",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "description": "Card status",
              "enum": [
                "ORDERED",
                "DISPATCHED",
                "ACTIVE",
                "BLOCKED",
                "CLOSED"
              ]
            },
            "validUntilDate": {
              "type": "string",
              "readOnly": true
            },
            "cardholder_name": {
              "type": "string",
              "description": "Cardholder name"
            },
            "notification": {
              "type": "object",
              "nullable": true,
              "properties": {
                "type": {
                  "enum": [
                    "ERROR",
                    "WARNING",
                    "INFO"
                  ],
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "orderInfo": {
              "type": "object",
              "nullable": true,
              "properties": {
                "title": {
                  "nullable": true,
                  "type": "string"
                },
                "message": {
                  "nullable": true,
                  "type": "string"
                },
                "ordered_at": {
                  "type": "integer"
                },
                "dispatched_at": {
                  "nullable": true,
                  "type": "integer"
                },
                "delivery": {
                  "nullable": true,
                  "type": "object"
                }
              }
            },
            "permissions": {
              "type": "object",
              "description": "List of true\\false permissions",
              "readOnly": true,
              "properties": {
                "canActivate": {
                  "type": "boolean",
                  "description": "User can activate card"
                },
                "canBlock": {
                  "type": "boolean",
                  "description": "User can block card"
                },
                "canUnblock": {
                  "type": "boolean",
                  "description": "User can unblock card"
                },
                "canGetPin": {
                  "type": "boolean",
                  "description": "User can get PIN"
                },
                "canSetPin": {
                  "type": "boolean",
                  "description": "User can set PIN"
                },
                "canGetCvv": {
                  "type": "boolean",
                  "description": "User can get CVV"
                },
                "canGetPassword": {
                  "type": "boolean",
                  "description": "User can get password"
                },
                "canSetPassword": {
                  "type": "boolean",
                  "description": "User can set password"
                },
                "canGetNumber": {
                  "type": "boolean",
                  "description": "User can get number"
                },
                "canClose": {
                  "type": "boolean",
                  "description": "User can close card"
                },
                "canSetSmsBalanceNotification": {
                  "type": "boolean",
                  "description": "User can manage card payment balance sms notification"
                },
                "canGetLimits": {
                  "type": "boolean",
                  "description": "User can get card limits"
                },
                "canSetLimits": {
                  "type": "boolean",
                  "description": "User can update card limits"
                },
                "canGetOperations": {
                  "type": "boolean",
                  "description": "User can get card operation flags"
                },
                "canSetOperations": {
                  "type": "boolean",
                  "description": "User can update card operation flags"
                }
              }
            },
            "updatedAtMs": {
              "type": "integer",
              "description": "Updated timestamp in milliseconds",
              "example": 1666666666999
            },
            "isSmsBalanceNotification": {
              "type": "boolean",
              "description": "Is Payment Balance Sms Notification Enabled",
              "example": false
            },
            "designId": {
              "type": "string",
              "description": "Design Id code",
              "example": "AIV"
            }
          }
        },
        "CardView": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CardIndex"
            },
            {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "description": "3d secure password",
                  "example": "Aa123!qweqwe"
                },
                "cvv": {
                  "type": "string",
                  "description": "Card CVV",
                  "example": 1234
                },
                "pin": {
                  "type": "string",
                  "description": "Card PIN",
                  "example": 1234
                },
                "number": {
                  "type": "string",
                  "description": "Card Number",
                  "example": 4743591235635050,
                  "readOnly": true
                },
                "phone3ds": {
                  "type": "string",
                  "description": "3d secure phone",
                  "example": "+48511155588",
                  "readOnly": true
                },
                "limits": {
                  "$ref": "#/components/schemas/CardLimitsV1"
                }
              }
            }
          ]
        },
        "CardLimitsV1": {
          "type": "object",
          "properties": {
            "updatedAtMs": {
              "type": "integer",
              "description": "Updated timestamp in milliseconds",
              "example": 1666666666999
            },
            "purchase": {
              "$ref": "#/components/schemas/CardLimitItemV1"
            },
            "withdrawal": {
              "$ref": "#/components/schemas/CardLimitItemV1"
            },
            "internet_purchase": {
              "$ref": "#/components/schemas/CardLimitItemV1"
            },
            "contactless_purchase": {
              "$ref": "#/components/schemas/CardLimitItemV1"
            }
          }
        },
        "CardLimitItemV1": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "enum": [
                "DEFAULT",
                "MAXIMUM"
              ],
              "example": "DEFAULT"
            },
            "switch": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Is the operation enabled/disabled switch is available"
                },
                "value": {
                  "type": "boolean",
                  "description": "Used if enabled"
                }
              }
            },
            "usage": {
              "type": "object",
              "properties": {
                "currency_id": {
                  "type": "string",
                  "example": "EUR",
                  "maxLength": 3
                },
                "transaction": {
                  "type": "number"
                },
                "daily": {
                  "type": "object",
                  "description": "Daily limit usage",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "used": {
                      "type": "number"
                    },
                    "available": {
                      "type": "number"
                    },
                    "reset": {
                      "description": "Reset timestamp",
                      "type": "integer"
                    }
                  }
                },
                "monthly": {
                  "type": "object",
                  "description": "Monthly limit usage",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "used": {
                      "type": "number"
                    },
                    "available": {
                      "type": "number"
                    },
                    "reset": {
                      "description": "Reset timestamp",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "CardResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "cardId": {
                  "type": "string"
                },
                "cardNumber": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "responses": {
        "ErrorFormResponse": {
          "description": "Form error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "ERROR"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "Unauthorized": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "example": {
                "status": "ERROR",
                "error": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "example": {
                "status": "ERROR",
                "error": {
                  "code": 403,
                  "message": "Forbidden"
                }
              }
            }
          }
        },
        "NotFound": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "example": {
                "status": "ERROR",
                "error": {
                  "code": 404,
                  "message": "Not Found"
                }
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "example": {
                "status": "ERROR",
                "error": {
                  "code": 422,
                  "message": "Validation failed",
                  "details": [
                    "amount is required",
                    "currency must be EUR or USD"
                  ]
                }
              }
            }
          }
        },
        "SignFormResponse": {
          "description": "MFA required",
          "content": {
            "application/json": {
              "example": {
                "status": "MFA_REQUIRED",
                "mfaToken": "string"
              }
            }
          }
        },
        "Validate": {
          "description": "Validation success",
          "content": {
            "application/json": {
              "example": {
                "status": "SUCCESS"
              }
            }
          }
        },
        "Created": {
          "description": "Resource created",
          "content": {
            "application/json": {
              "example": {
                "status": "SUCCESS",
                "data": {
                  "id": "abc123"
                }
              }
            }
          }
        },
        "Sign": {
          "description": "MFA sign required",
          "content": {
            "application/json": {
              "example": {
                "status": "MFA_REQUIRED",
                "mfaToken": "def456"
              }
            }
          }
        },
        "BadRequest": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "example": {
                "status": "ERROR",
                "error": {
                  "code": 400,
                  "message": "Bad request"
                }
              }
            }
          }
        },
        "SuccessFormResponse": {
          "description": "Operation successful",
          "content": {
            "application/json": {
              "example": {
                "status": "SUCCESS",
                "message": "Operation completed successfully"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        },
        "BasicAuth": {
          "type": "http",
          "scheme": "basic"
        }
      },
      "parameters": {
        "Before": {
          "name": "before",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time"
          },
          "required": false
        },
        "After": {
          "name": "after",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time"
          },
          "required": false
        },
        "Limit": {
          "name": "limit",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        "PageNum": {
          "name": "page",
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "PerPage": {
          "name": "per-page",
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "Sort": {
          "name": "sort",
          "in": "query",
          "description": "Enter a field name to sort by (with a minus to sort desc):\n\n  id: sort asc\n  -id: sort desc",
          "schema": {
            "type": "string"
          }
        }
      },
      "headers": {
        "x-pagination-current-page": {
          "description": "Current page",
          "schema": {
            "type": "integer",
            "default": 1
          }
        },
        "x-pagination-page-count": {
          "description": "Pages count",
          "schema": {
            "type": "integer",
            "example": 6
          }
        },
        "x-pagination-per-page": {
          "description": "Items count per page",
          "schema": {
            "type": "integer",
            "default": 20,
            "example": 20,
            "maximum": 100,
            "minimum": 1
          }
        },
        "x-pagination-total-count": {
          "description": "Total items count",
          "schema": {
            "type": "integer",
            "example": 113
          }
        }
      }
    }
  }
}