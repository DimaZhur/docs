{
  "openapi": "3.1.0",
  "info": {
    "title": "Finsei API",
    "description": "API documentation for Finsei",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.sandbox.finsei.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v3/payment": {
      "post": {
        "summary": "Create new payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "in": "query",
            "name": "signToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateV3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Validate"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "202": {
            "$ref": "#/components/responses/Sign"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      },
      "options": {
        "tags": [
          "payment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "POST, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "POST, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v2/mfa/{type}/sign/{requestId}": {
      "post": {
        "tags": [
          "mfa"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          },
          {
            "BasicAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "sms",
              "description": "Type for MFA",
              "enum": [
                "sms",
                "google"
              ]
            }
          },
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "111111",
                    "description": "Verification code",
                    "maxLength": 6
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "SUCCESS"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signToken": {
                              "type": "string",
                              "required": true,
                              "example": "eyJhbGciOiJSUzI1NiJ9.eyJzaWduSWQiOiI5YjJjZm"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "mfa"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          },
          {
            "BasicAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "google",
              "description": "Type for MFA",
              "enum": [
                "sms",
                "google"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "POST, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "POST, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v2/auth/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "SUCCESS"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "wsToken": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/SignFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v2/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "in": "query",
            "name": "signToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Validate"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "202": {
            "$ref": "#/components/responses/Sign"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v2/member": {
      "post": {
        "summary": "Invite sub user",
        "tags": [
          "member"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MemberInviteV2"
              },
              "encoding": {
                "walletAccess[]": {
                  "explode": true
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInviteV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/responses/SuccessFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/SignFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v2/beneficiary": {
      "post": {
        "summary": "Create beneficiary",
        "tags": [
          "beneficiary"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateBeneficiaryV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBeneficiaryV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-id": {
                "description": "A unique ID of created beneficiary.",
                "schema": {
                  "type": "integer",
                  "format": "id",
                  "example": 5631
                }
              },
              "x-uuid": {
                "description": "A unique UUID of created beneficiary.",
                "schema": {
                  "type": "string",
                  "format": "uuid",
                  "example": "966a2cde-695a-4202-8114-13e74a077e8f"
                }
              }
            },
            "content": {
              "application/json": {
                "example": [

                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v2/payment": {
      "get": {
        "summary": "Display list of payments",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expand",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentExpand"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "debit",
                "credit"
              ]
            }
          },
          {
            "in": "query",
            "name": "counterpartyName",
            "description": "Counterparty name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "counterpartyIban",
            "description": "Counterparty iban",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "walletId",
            "description": "Wallet unique id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "new",
                  "process",
                  "completed",
                  "rejected",
                  "canceled",
                  "draft",
                  "compliance"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "createdFrom",
            "description": "Date from in unix or millisecond unix time format",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "createdTo",
            "description": "Date to in unix or millisecond unix time format",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": [
                "WALLET"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/PageNum"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-pagination-current-page": {
                "$ref": "#/components/headers/x-pagination-current-page"
              },
              "x-pagination-page-count": {
                "$ref": "#/components/headers/x-pagination-page-count"
              },
              "x-pagination-per-page": {
                "$ref": "#/components/headers/x-pagination-per-page"
              },
              "x-pagination-total-count": {
                "$ref": "#/components/headers/x-pagination-total-count"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentV2"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "deprecated": true,
        "summary": "Create new payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "schema": {
              "default": 0,
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/responses/SuccessFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/ErrorFormResponse"
                    },
                    {
                      "$ref": "#/components/responses/SignFormResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "summary": "Delete payment (only DRAFT)",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "array",
                    "description": "Payment id (integer) or payment uuid (UUID string)",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "payment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, POST, DELETE, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, POST, DELETE, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v2/payment/{id}": {
      "get": {
        "summary": "Details information about payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Either payment id (integer) or payment uuid (UUID string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentExpand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentV2"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "options": {
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Either payment id (integer) or payment uuid (UUID string)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v3/wallet": {
      "get": {
        "summary": "Get all wallets",
        "tags": [
          "wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "before",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of wallets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Wallet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v3/wallet/{id}": {
      "get": {
        "summary": "Get wallet by ID",
        "tags": [
          "wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Wallet"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/payment/{id}": {
      "get": {
        "deprecated": true,
        "summary": "Details information about payment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/PaymentExpand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentV1"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "options": {
        "deprecated": true,
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Payment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Allow": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                },
                "description": "GET, OPTIONS"
              }
            }
          }
        }
      }
    },
    "/v2/card": {
      "post": {
        "summary": "Create a new card",
        "tags": [
          "card"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/card": {
      "get": {
        "summary": "Get list of cards",
        "tags": [
          "card"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "wallet_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDERED",
                  "DISPATCHED",
                  "ACTIVE",
                  "BLOCKED",
                  "CLOSED"
                ]
              },
              "default": []
            }
          },
          {
            "in": "query",
            "name": "type[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ChipAndPin",
                  "Virtual",
                  "Disposable"
                ]
              },
              "default": []
            },
            "style": "form",
            "explode": true
          },
          {
            "$ref": "#/components/parameters/PageNum"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-pagination-current-page": {
                "$ref": "#/components/headers/x-pagination-current-page"
              },
              "x-pagination-page-count": {
                "$ref": "#/components/headers/x-pagination-page-count"
              },
              "x-pagination-per-page": {
                "$ref": "#/components/headers/x-pagination-per-page"
              },
              "x-pagination-total-count": {
                "$ref": "#/components/headers/x-pagination-total-count"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardIndex"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "signToken": {
            "type": "string",
            "example": "abc123"
          },
          "fingerprintid": {
            "type": "string",
            "example": "fingerprint-xyz"
          }
        }
      },
      "AuthV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "allowIps": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ipv4"
            }
          },
          "withMfa": {
            "type": "boolean"
          },
          "fingerprint": {
            "type": "string"
          },
          "expiredAt": {
            "type": "string",
            "format": "date-time"
          },
          "app": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "MemberInviteV2": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "walletAccess": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "CreateBeneficiaryV2": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Uuid of beneficiary"
          },
          "name": {
            "type": "string",
            "description": "Name of beneficiary",
            "example": "Aliaksandr",
            "maxLength": 255
          },
          "currency_id": {
            "type": "string",
            "description": "Currency",
            "example": "EUR",
            "maxLength": 3
          },
          "bank_country": {
            "type": "string",
            "description": "2-char code of country",
            "example": "LT",
            "maxLength": 2
          },
          "iban": {
            "type": "string",
            "description": "IBAN number",
            "example": "NL13RABO4448094871",
            "maxLength": 255
          },
          "bic_swift": {
            "type": "string",
            "description": "BIC\\SWIFT number",
            "example": "AGBLLT2X"
          },
          "account_number": {
            "type": "number"
          },
          "sort_code": {
            "type": "number"
          },
          "bank_details_type": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "LOCAL"
            ]
          },
          "street": {
            "type": "string",
            "description": "Beneficiary address street",
            "example": "Gagarina street",
            "maxLength": 64
          },
          "house": {
            "type": "string",
            "description": "Beneficiary house number",
            "example": 22,
            "maxLength": 32
          },
          "city": {
            "type": "string",
            "description": "Beneficiary city",
            "example": "London",
            "maxLength": 64
          },
          "country_id": {
            "type": "string",
            "description": "Alpha-2 country code",
            "example": "GB"
          },
          "postal_code": {
            "type": "string",
            "description": "Beneficiary postal code",
            "example": 10001,
            "maxLength": 32
          },
          "entity_type": {
            "type": "string",
            "description": "Entity type",
            "enum": [
              "individual",
              "company"
            ],
            "example": "company"
          },
          "company_name": {
            "type": "string",
            "description": "Finsei Ltd.",
            "example": "Finsei Ltd.",
            "maxLength": 35
          },
          "first_name": {
            "type": "string",
            "description": "Beneficiary first name",
            "example": "Aliaksandr",
            "maxLength": 64
          },
          "last_name": {
            "type": "string",
            "description": "Beneficiary last name",
            "example": "Lastname",
            "maxLength": 64
          }
        },
        "required": [
        ]
      },
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESS",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "walletId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "beneficiaryId": {
            "type": "string",
            "nullable": true
          },
          "targetWalletId": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string"
          },
          "purposeCode": {
            "type": "string"
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "SEPA",
              "SWIFT"
            ]
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "walletId",
          "amount",
          "currency",
          "beneficiaryId",
          "paymentType"
        ]
      },
      "PaymentV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of payment"
          },
          "status": {
            "type": "string",
            "description": "Currency payment status",
            "enum": [
              "new",
              "process",
              "completed",
              "rejected",
              "canceled",
              "failed",
              "draft"
            ]
          },
          "type": {
            "type": "string",
            "description": "Payment type"
          },
          "fee": {
            "type": "string",
            "description": "Fee for payment"
          },
          "amount": {
            "type": "string",
            "description": "Payment amount"
          },
          "total": {
            "type": "string",
            "description": "Payment fee + amount"
          },
          "counterparty_name": {
            "type": "string",
            "description": "Counterparty Holder Name"
          },
          "counterparty": {
            "type": "object",
            "properties": {
              "bic_swift": {
                "type": "string",
                "description": "BIC\\SWIFT number of counterparty"
              },
              "bank_account_holder_name": {
                "type": "string",
                "description": "Counterparty Holder Name"
              },
              "iban": {
                "type": "string",
                "description": "Counterparty iban",
                "maxLength": 255
              }
            }
          },
          "beneficiary_id": {
            "type": "integer",
            "description": "Beneficiary ID"
          },
          "wallet_id": {
            "type": "integer",
            "description": "Wallet ID"
          },
          "purpose": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "Main payment"
              }
            }
          },
          "icon": {
            "type": "string",
            "enum": [
              "CONVERT",
              "RETURN",
              "CARD",
              "ACCOUNT",
              "CREDIT",
              "DEBIT"
            ]
          },
          "entity": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "CONVERT",
              "CARD"
            ]
          },
          "currency_id": {
            "type": "string",
            "description": "Payment currency 3-char code",
            "maxLength": 3
          },
          "currency_exchange_id": {
            "type": "integer"
          },
          "reference": {
            "type": "string",
            "description": "Payment reference"
          },
          "transaction_amount": {
            "type": "string"
          },
          "transaction_currency_id": {
            "type": "string",
            "maxLength": 3
          },
          "transaction_exchange_rate": {
            "type": "string"
          },
          "card_masked_number": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "description": "List of true\\false permissions",
            "properties": {
              "canCancel": {
                "type": "boolean",
                "description": "User can canceled current payment"
              },
              "canSign": {
                "type": "boolean",
                "description": "User can sing DRAFT payment"
              },
              "canDelete": {
                "type": "boolean",
                "description": "User can delete DRAFT payment"
              },
              "canDownloadConfirmation": {
                "type": "boolean",
                "description": "User can download confirmation file"
              }
            }
          },
          "reject_reason": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyExchange": {
            "$ref": "#/components/schemas/CurrencyExchangeV1"
          },
          "merchant": {
            "$ref": "#/components/schemas/MerchantV1"
          },
          "cardholder": {
            "$ref": "#/components/schemas/Cardholder"
          },
          "files": {
            "$ref": "#/components/schemas/PaymentFiles"
          },
          "createdAtMs": {
            "type": "integer",
            "description": "Created timestamp in milliseconds",
            "example": 1666666666999
          },
          "updatedAtMs": {
            "type": "integer",
            "description": "Updated timestamp in milliseconds",
            "example": 1666666666999
          },
          "completed_at": {
            "type": "integer",
            "description": "Time of payment completion",
            "example": 1667404598
          }
        }
      },
      "PaymentV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of payment"
          },
          "uuid": {
            "type": "string",
            "description": "Unique id"
          },
          "status": {
            "type": "string",
            "description": "Currency payment status",
            "enum": [
              "new",
              "process",
              "completed",
              "rejected",
              "canceled",
              "compliance",
              "draft"
            ]
          },
          "type": {
            "type": "string",
            "description": "Payment type"
          },
          "fee": {
            "type": "object",
            "description": "Fee for payment",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currencyId": {
                "type": "string"
              }
            }
          },
          "amount": {
            "type": "number",
            "description": "Payment amount"
          },
          "total": {
            "type": "number",
            "description": "Payment fee + amount"
          },
          "counterparty": {
            "type": "object",
            "description": "Counterparty Holder Name",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name or description of counterparty"
              },
              "accountHolderName": {
                "type": "string",
                "description": "BIC\\SWIFT number of counterparty"
              },
              "bic": {
                "type": "string",
                "description": "Counterparty Holder Name"
              },
              "iban": {
                "type": "string",
                "description": "Counterparty iban",
                "maxLength": 255
              }
            }
          },
          "beneficiaryId": {
            "type": "integer",
            "description": "Beneficiary ID"
          },
          "walletId": {
            "type": "integer",
            "description": "Wallet ID"
          },
          "icon": {
            "type": "string",
            "enum": [
              "CONVERT",
              "RETURN",
              "CARD",
              "ACCOUNT",
              "CREDIT",
              "DEBIT"
            ]
          },
          "entity": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "CONVERT",
              "CARD"
            ]
          },
          "currencyId": {
            "type": "string",
            "description": "Payment currency 3-char code",
            "maxLength": 3
          },
          "currencyExchangeId": {
            "type": "integer"
          },
          "currencyExchangeUuid": {
            "type": "string",
            "description": "Unique currency exchange uuid"
          },
          "reference": {
            "type": "string",
            "description": "Payment reference"
          },
          "transactionAmount": {
            "type": "number"
          },
          "transactionCurrencyId": {
            "type": "string",
            "maxLength": 3
          },
          "transactionExchangeRate": {
            "type": "string"
          },
          "cardMaskedNumber": {
            "type": "string"
          },
          "retrievalReferenceNumber": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "description": "List of true\\false permissions",
            "properties": {
              "canCancel": {
                "type": "boolean",
                "description": "User can canceled current payment"
              },
              "canSign": {
                "type": "boolean",
                "description": "User can sing DRAFT payment"
              },
              "canDelete": {
                "type": "boolean",
                "description": "User can delete DRAFT payment"
              },
              "canDownloadConfirmation": {
                "type": "boolean",
                "description": "User can download confirmation file"
              }
            }
          },
          "rejectReason": {
            "type": "string"
          },
          "purposeCode": {
            "$ref": "#/components/schemas/PurposeCode"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyExchange": {
            "$ref": "#/components/schemas/CurrencyExchangeV2"
          },
          "merchant": {
            "$ref": "#/components/schemas/MerchantV2"
          },
          "cardholder": {
            "$ref": "#/components/schemas/Cardholder"
          },
          "files": {
            "$ref": "#/components/schemas/PaymentFiles"
          },
          "createdAt": {
            "type": "integer",
            "description": "Created timestamp in milliseconds",
            "example": 1666666666999
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated timestamp in milliseconds",
            "example": 1666666666999
          },
          "completedAt": {
            "type": "integer",
            "description": "Time of payment completion",
            "example": 1667404598
          }
        }
      },
      "PaymentFiles": {
        "type": "array",
        "readOnly": true,
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "5fb3ea0c68147.png",
              "maxLength": 128
            },
            "type": {
              "type": "string",
              "enum": [
                "invoice",
                "agreement"
              ]
            },
            "url": {
              "type": "string",
              "example": "https://altpay.uk/v1/payment/100/download/5fb3ea0c68147.pdf"
            }
          }
        }
      },
      "CurrencyExchangeV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESS",
              "COMPLETED",
              "REJECTED"
            ]
          },
          "debitCurrencyId": {
            "type": "string"
          },
          "creditCurrencyId": {
            "type": "string"
          },
          "debitAmount": {
            "type": "string"
          },
          "creditAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "createdAtMs": {
            "type": "integer",
            "description": "Created timestamp in milliseconds",
            "example": 1666666666999
          },
          "updatedAtMs": {
            "type": "integer",
            "description": "Updated timestamp in milliseconds",
            "example": 1666666666999
          },
          "completedAt": {
            "type": "integer",
            "example": 1667404598
          }
        }
      },
      "CurrencyExchangeV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "description": "Unique currency exchange uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESS",
              "COMPLETED",
              "REJECTED"
            ]
          },
          "debitCurrencyId": {
            "type": "string",
            "example": "EUR"
          },
          "creditCurrencyId": {
            "type": "string",
            "example": "USD"
          },
          "debitAmount": {
            "type": "number"
          },
          "creditAmount": {
            "type": "number"
          },
          "fee": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "createdAtMs": {
            "type": "integer",
            "description": "Created timestamp in milliseconds",
            "example": 1666666666999
          },
          "updatedAtMs": {
            "type": "integer",
            "description": "Updated timestamp in milliseconds",
            "example": 1666666666999
          },
          "completedAt": {
            "type": "integer",
            "example": 1667404598
          }
        }
      },
      "CardIndex": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Card id",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "description": "Unique Card id (UUID string)",
            "readOnly": true
          },
          "wallet_id": {
            "type": "integer",
            "description": "Wallet ID",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "ChipAndPin",
              "Virtual",
              "Disposable"
            ]
          },
          "masked_number": {
            "type": "string",
            "description": "Masked Card Number",
            "example": "474359******5050",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Card status",
            "enum": [
              "ORDERED",
              "DISPATCHED",
              "ACTIVE",
              "BLOCKED",
              "CLOSED"
            ]
          },
          "validUntilDate": {
            "type": "string",
            "readOnly": true
          },
          "cardholder_name": {
            "type": "string",
            "description": "Cardholder name"
          },
          "notification": {
            "type": "object",
            "nullable": true,
            "properties": {
              "type": {
                "enum": [
                  "ERROR",
                  "WARNING",
                  "INFO"
                ],
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "orderInfo": {
            "type": "object",
            "nullable": true,
            "properties": {
              "title": {
                "nullable": true,
                "type": "string"
              },
              "message": {
                "nullable": true,
                "type": "string"
              },
              "ordered_at": {
                "type": "integer"
              },
              "dispatched_at": {
                "nullable": true,
                "type": "integer"
              },
              "delivery": {
                "nullable": true,
                "type": "object"
              }
            }
          },
          "permissions": {
            "type": "object",
            "description": "List of true\\false permissions",
            "readOnly": true,
            "properties": {
              "canActivate": {
                "type": "boolean",
                "description": "User can activate card"
              },
              "canBlock": {
                "type": "boolean",
                "description": "User can block card"
              },
              "canUnblock": {
                "type": "boolean",
                "description": "User can unblock card"
              },
              "canGetPin": {
                "type": "boolean",
                "description": "User can get PIN"
              },
              "canSetPin": {
                "type": "boolean",
                "description": "User can set PIN"
              },
              "canGetCvv": {
                "type": "boolean",
                "description": "User can get CVV"
              },
              "canGetPassword": {
                "type": "boolean",
                "description": "User can get password"
              },
              "canSetPassword": {
                "type": "boolean",
                "description": "User can set password"
              },
              "canGetNumber": {
                "type": "boolean",
                "description": "User can get number"
              },
              "canClose": {
                "type": "boolean",
                "description": "User can close card"
              },
              "canSetSmsBalanceNotification": {
                "type": "boolean",
                "description": "User can manage card payment balance sms notification"
              },
              "canGetLimits": {
                "type": "boolean",
                "description": "User can get card limits"
              },
              "canSetLimits": {
                "type": "boolean",
                "description": "User can update card limits"
              },
              "canGetOperations": {
                "type": "boolean",
                "description": "User can get card operation flags"
              },
              "canSetOperations": {
                "type": "boolean",
                "description": "User can update card operation flags"
              }
            }
          },
          "updatedAtMs": {
            "type": "integer",
            "description": "Updated timestamp in milliseconds",
            "example": 1666666666999
          },
          "isSmsBalanceNotification": {
            "type": "boolean",
            "description": "Is Payment Balance Sms Notification Enabled",
            "example": false
          },
          "designId": {
            "type": "string",
            "description": "Design Id code",
            "example": "AIV"
          }
        }
      },
      "MerchantV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique merchant id"
          },
          "name": {
            "type": "string",
            "description": "Merchant name"
          },
          "external_id": {
            "type": "string",
            "description": "External merchant id"
          },
          "category_code": {
            "type": "string",
            "description": "Merchant category code",
            "maxLength": 4
          },
          "category_name": {
            "type": "string",
            "description": "Merchant category name"
          },
          "address": {
            "type": "string",
            "description": "Merchant address"
          }
        }
      },
      "MerchantV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique merchant id"
          },
          "name": {
            "type": "string",
            "description": "Merchant name"
          },
          "externalId": {
            "type": "string",
            "description": "External merchant id"
          },
          "categoryCode": {
            "type": "string",
            "description": "Merchant category code",
            "maxLength": 4
          },
          "categoryName": {
            "type": "string",
            "description": "Merchant category name"
          },
          "groupId": {
            "type": "string",
            "description": "Merchant category group id"
          },
          "groupName": {
            "type": "string",
            "description": "Merchant category group name"
          },
          "address": {
            "type": "string",
            "description": "Merchant address"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "example": "https://ebay.com",
            "description": "Merchant URL (Enriched data)"
          },
          "domain": {
            "type": "string",
            "nullable": true,
            "example": "ebay.com",
            "description": "Merchant domain (Enriched data)"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "0800 358 6551",
            "description": "Merchant phone number (Enriched data)"
          },
          "iconUrl": {
            "type": "string",
            "nullable": true,
            "example": "https://ir.ebaystatic.com/pictures/aw/pics/announcements/new/logo/logo-inline.png",
            "description": "Merchant icon url (Enriched data)"
          }
        }
      },
      "Cardholder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "Name and surname"
          },
          "channel": {
            "type": "string",
            "description": "Replenishment channel",
            "enum": [
              "VISA",
              "MASTERCARD",
              "APPLE_PAY",
              "OTHER"
            ]
          },
          "cardNumber": {
            "type": "string",
            "description": "PAN (permanent account number), which is usually 16-digits long"
          }
        }
      },
      "PurposeCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "PaymentCreateV2": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Unique id"
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "draft"
            ],
            "default": "new"
          },
          "walletId": {
            "type": "integer"
          },
          "amount": {
            "type": "number"
          },
          "beneficiaryId": {
            "type": "integer",
            "description": "not required if **target_wallet_id** is set",
            "nullable": true,
            "default": null
          },
          "targetWalletId": {
            "type": "integer",
            "description": "not use if **beneficiary_id** is set",
            "nullable": true,
            "default": null
          },
          "reference": {
            "type": "string",
            "description": "not required if **target_wallet_id** is set"
          },
          "files": {
            "type": "array",
            "description": "not required if **target_wallet_id** is set",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "signToken": {
            "type": "string",
            "description": "Sign token"
          }
        },
        "required": [
          "walletId",
          "amount"
        ]
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaymentCreateV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "DRAFT"
            ],
            "default": "NEW"
          },
          "walletId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "beneficiaryId": {
            "type": "string",
            "description": "not required if **target_wallet_id** is set",
            "nullable": true,
            "default": null
          },
          "targetWalletId": {
            "type": "string",
            "description": "not use if **beneficiary_id** is set",
            "nullable": true,
            "default": null
          },
          "reference": {
            "type": "string",
            "description": "not required if **target_wallet_id** is set"
          },
          "purposeCode": {
            "type": "string",
            "description": "required when beneficiary country is UAE"
          },
          "files": {
            "type": "array",
            "description": "not required if **target_wallet_id** is set",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "walletId",
          "amount"
        ]
      },
      "PaymentExpand": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "wallet",
            "beneficiary"
          ]
        }
      },
      "CardRequest": {
        "type": "object",
        "properties": {
          "walletId": {
            "type": "string"
          },
          "cardType": {
            "type": "string",
            "enum": [
              "VIRTUAL",
              "PHYSICAL"
            ]
          },
          "currency": {
            "type": "string"
          },
          "nameOnCard": {
            "type": "string"
          }
        },
        "required": [
          "walletId",
          "cardType",
          "currency",
          "nameOnCard"
        ]
      },
      "CardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "cardId": {
                "type": "string"
              },
              "cardNumber": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "responses": {
      "ErrorFormResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ERROR"
          },
          "errors": {
            "type": "object",
            "example": {
              "email": "Email cannot be blank."
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "example": {
              "status": "ERROR",
              "error": {
                "code": 401,
                "message": "Unauthorized"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "example": {
              "status": "ERROR",
              "error": {
                "code": 403,
                "message": "Forbidden"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "example": {
              "status": "ERROR",
              "error": {
                "code": 404,
                "message": "Not Found"
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "example": {
              "status": "ERROR",
              "error": {
                "code": 422,
                "message": "Validation failed",
                "details": [
                  "amount is required",
                  "currency must be EUR or USD"
                ]
              }
            }
          }
        }
      },
      "SignFormResponse": {
        "description": "MFA required",
        "content": {
          "application/json": {
            "example": {
              "status": "MFA_REQUIRED",
              "mfaToken": "string"
            }
          }
        }
      },
      "Validate": {
        "description": "Validation success",
        "content": {
          "application/json": {
            "example": {
              "status": "SUCCESS"
            }
          }
        }
      },
      "Created": {
        "description": "Resource created",
        "content": {
          "application/json": {
            "example": {
              "status": "SUCCESS",
              "data": {
                "id": "abc123"
              }
            }
          }
        }
      },
      "Sign": {
        "description": "MFA sign required",
        "content": {
          "application/json": {
            "example": {
              "status": "MFA_REQUIRED",
              "mfaToken": "def456"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "example": {
              "status": "ERROR",
              "error": {
                "code": 400,
                "message": "Bad request"
              }
            }
          }
        }
      },
      "SuccessFormResponse": {
        "description": "Operation successful",
        "content": {
          "application/json": {
            "example": {
              "status": "SUCCESS",
              "message": "Operation completed successfully"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "parameters": {
      "Before": {
        "name": "before",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false
      },
      "After": {
        "name": "after",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "required": false
      },
      "PageNum": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "PerPage": {
        "name": "per-page",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "Sort": {
        "name": "sort",
        "in": "query",
        "description": "Enter a field name to sort by (with a minus to sort desc):\n\n  id: sort asc\n  -id: sort desc",
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "x-pagination-current-page": {
        "description": "Current page",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "x-pagination-page-count": {
        "description": "Pages count",
        "schema": {
          "type": "integer",
          "example": 6
        }
      },
      "x-pagination-per-page": {
        "description": "Items count per page",
        "schema": {
          "type": "integer",
          "default": 20,
          "example": 20,
          "maximum": 100,
          "minimum": 1
        }
      },
      "x-pagination-total-count": {
        "description": "Total items count",
        "schema": {
          "type": "integer",
          "example": 113
        }
      }
    }
  }
}